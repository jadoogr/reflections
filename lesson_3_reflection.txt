When would you want to use a remote repository rather than keeping all your work local?
When I want to share my code withthe world, rather more importantly when I want to collaborate with other people. 
Another reason could be when I want to push changes to my code from different computers.
Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
The machine does not understands when a meaningful change has been done in the file i.e. a new feature has been added or some other modification in the previous one has been added, so it may pull when the task is not completed and thus the code may not run. Thats why it is necessary that the pull is manual to avoid such errors.

Describe the difference between fork, clones, and branches. When would you use one instead of another?
Forking is making a copy of a repository on github in github only. Cloning is making a copy of a repository from github to your local system or from local system to local system. Branching is continuing work along a different path in terms of goal or aim, without causing any changes in the orignal branch. We use fork when we want to modify someone else's work and want the world to see it, cloning when we want to create a copy of a work present on github on to our local system for modifying, this part doesn't exactly means we want to run to push the changes to outer world it could be only for our use.

What is the benefit of having a copy of the last known state of the remote stored locally?
So that we can get a orin/master branch to merge into master branch. Without having a local copy of the last known state of remote we wouldn't have been able to determine the origin/master branch.

How would you collaborate without Git or Github? What would be easier, and what would be harder?
We will have to exchange code via other sources for instance mail ,etc. Comparing code will be a very difficult task, thus merging and other functions of git wich depend on the differences of the two files will be very difficult. I would definately like to use git.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
When I am adding a new feature into the program I would like to have a new branch so that when I push it onto Github everybody will know about it and if there is a mistake the main project won't broke down